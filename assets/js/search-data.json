{
  
    
        "post0": {
            "title": "_opgave 2 Uge 6",
            "content": "09:40 – Opgave 2 (35 minutter) . Besvar følgende spørgsmål, f.eks. vha. ”Ordet rundt”. Noter svarene ned idet I skal bruge . dem til ”Tre til te” senere. . Name five areas where deep learning is now the best in the world. . Natural language processing : Svare på spørgsmål, Dokument klassificering. . | Computer vision : Sat and drone image interpretation . | Medicine: MRI , X-Ray At finde tumorer* . | Games Chess and Go. . | Recommendation systems : Amazon . | | Based on the book of the same name, what are the requirements for parallel distributed processing (PDP)? . A set of processing units . | A state of activation . | An output function for each unit . | A pattern of connectivity among units . | A propagation rule for propagating patterns of activities through the network of connectivities . | An activation rule for combining the inputs impinging on a unit with the current state of that unit to produce an output for the unit . | A learning rule whereby patterns of connectivity are modified by experience . | An environment within which the system must operate . | | What were the two theoretical misunderstandings that held back the field of neural networks? . In theory, adding just one extra layer of neurons was enough to allow any mathematical function to be approximated with these neural networks, but in practice such networks were often too big and too slow to be useful. . | Folk blev ved med at add’e flere lag fordi det teoretisk set kunne løse mere komplekse problemer but not how it works exactly. . | | What is a GPU? . Graphics Processing Unit. Made for a 3D environment. Handle 1000 tasks at the same time; Faster Training of Neural Network. . | | Why is it hard to use a traditional computer program to recognize images in a photo? . We don’t quite understand how we(peeps) recognize images and therefore it is difficult to make a traditional Computer program recognize. . | | What did Samuel mean by “weight assignment”? . WA is a particular choice of values. . | “Arthur Samuel further mentions an “ automatic means of testing the effectiveness of any current weight assignment ”” . | | What term do we normally use in deep learning for what Samuel called “weights”? . We use the term Model Parameters. . | | Draw a picture that summarizes Samuel’s view of a machine learning model. . | . :) . Why is it hard to understand why a deep learning model makes a particular prediction? . We don’t know what happens in the black box. . | | What is the name of the theorem that shows that a neural network can solve any mathematical problem to any level of accuracy? . | Universal approximation theorem. . What do you need in order to train a model? . Dataset and labels . | | How could a feedback loop impact the rollout of a predictive policing model? . Negative feedback loop; Positive Feedback Loop. . | We make a predictive policing model based on arrest and therefore we don’t predict crime but rather arrests. . | | Do we always have to use 224×224-pixel images with the cat recognition model? . No we do not. 224x224 is commonly used for historical reasons. . | | What is the difference between classification and regression? . Classification is used to predict a class or category. Fx type animal. . | Regression is used to predict numeric quantity. fx age of animal. . | | What is a validation set? What is a test set? Why do we need them? . Validation set do we not use for training, but for validation to prevent overfitting. . | Test sets bruges til at færdiggøre ens model . | | What will fastai do if you don’t provide a validation set? . FastAi will automatically create a validation dataset. It will randomly take 20% of the data and assign it as the validation set. . | | Can we always use a random sample for a validation set? Why or why not? . No. A validation set must not be random in order to have consistency between the different results. If a validation set was random we would not be able to determine whether or not the results differ due to the training set or the validation set. . | | What is overfitting? Provide an example . “Overfitting refers to when the model fits too closely to a limited set of data but does not generalize well to unseen data.” . | | What is a metric? How does it differ from “loss”? . The measure of performance is called ‘loss’, depends not only on the predictions but also the labels: . | A metric is a function that measures the quality of the model’s predictions using the validation set. . | | How can pretrained models help? . Pretrained models have been trained on other problems that may be quite similar to the current task, pretrained models are useful because they have already learned how to handle a lot. . | | What is the “head” of a model? . “When using a pretrained model, the later layers of the model, which were useful for the task that the model was originally trained on, are replaced with one or more new layers with randomized weights, of an appropriate size for the dataset you are working with. These new layers are called the “head” of the model.” . | | What kinds of features do the early layers of a CNN find? How about the later layers? . The first layer focuses on things such as diagonal or horizontal lines as well as edges and various gradients. It then weights these accordingly. . | The second layer will focus on corners, repeating lines and other simple patterns. . | The third layer is able to identify higher-level semantic components i.e. wheels, flower petals etc. . | The fourth layer can identify concepts such as faces. . | | Are image models only useful for photos? . “An image recognizer can, as its name suggests, only recognize images. But a lot of things can be represented as images, which means that an image recogniser can learn to complete many tasks.”(sounds) . | For instance, a sound can be converted to a spectrogram, which is a chart that shows the amount of each frequency at each time in an audio file . | | What is an “architecture”? . “The functional form of the model is called its architecture” fx Convolutional Neural Network) . | | What is segmentation? . “Creating a model that can recognize the content of every individual pixel in an image is called segmentation.” . | We divide the picture into individual pixels. . | | What is y_range used for? When do we need it? . afgrænse dataen . | for the regression model : . | | What are “hyperparameters”? . | . Model version . | model architecture . | learning rates . | Data augmentation strategies . | And so on.. . | What’s the best way to avoid failures when using AI in an organization? . . | | Complete the Jupyter Notebook online appendix. (use the file app_jupyter.ipynb in Gradient or get it from github: https://oreil.ly/9uPZe) . | Why is a GPU useful for deep learning? How is a CPU different, and why is it less effective for deep learning? . They are many times faster at running multiple threads calculating the type of mathematical equation over and over again used in Neural networks. Because it is the same way graphics are calculated. . | | Try to think of three areas where feedback loops might impact the use of machine learning. See if you can find documented examples of that happening in practice. . | * | .",
            "url": "https://domovou.github.io/fastpages_blog/2021/02/22/_Opgave-2-Uge-6.html",
            "relUrl": "/2021/02/22/_Opgave-2-Uge-6.html",
            "date": " • Feb 22, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://domovou.github.io/fastpages_blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Hotdog finder",
            "content": ". !pip install -Uqq fastbook import fastbook fastbook.setup_book() . from fastbook import * . from fastbook import * from fastai.vision.widgets import * . configId = &quot;efb1b149-c219-4091-be6d-14a279c405c4&quot; . subscriptionKey = &quot;1be3ada0f2a649d087e9fb39798485a0&quot; . def search_images_bing_new(key, term, customConfigId, min_sz=128): url = &#39;https://api.bing.microsoft.com/v7.0/custom/images/search?&#39; + &#39;q=&#39; + term + &#39;&amp;&#39; + &#39;customconfig=&#39; + customConfigId + &#39;&amp;&#39; + &#39;count=150&#39; r = requests.get(url, headers={&#39;Ocp-Apim-Subscription-Key&#39;: key}) search_results = r.json() return L([img[&quot;thumbnailUrl&quot;] + &quot;.jpg&quot; for img in search_results[&quot;value&quot;][:150]]) . hotdogImages = search_images_bing_new(subscriptionKey, &quot;hotdog&quot;, configId) . firstHotdogImage = hotdogImages[0] hotdogDest = &quot;hotdog.jpg&quot; download_url(firstHotdogImage, hotdogDest) . hotdogImg = Image.open(hotdogDest) hotdogImg.to_thumb(128,128) . hotdogPath = Path(&#39;hotdogs&#39;) if not hotdogPath.exists(): hotdogPath.mkdir() download_images(&quot;hotdogs&quot;, urls = hotdogImages) . hotdogImageFiles = get_image_files(&quot;hotdogs&quot;) . failedHotdogs = verify_images(hotdogImageFiles) failedHotdogs . (#0) [] . foodImages = search_images_bing_new(subscriptionKey, &quot;food -hotdog&quot;, configId) foodPath = Path(&#39;food&#39;) if not foodPath.exists(): foodPath.exists() download_images(foodPath, urls=foodImages) foodImageFiles = get_image_files(foodPath) failedFood = verify_images(foodImageFiles) failedFood . (#0) [] . foods = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2, seed=42), get_y=parent_label, item_tfms=Resize(128)) foods = foods.new( item_tfms=RandomResizedCrop(224, min_scale=0.5), batch_tfms=aug_transforms()) . dls = foods.dataloaders(&quot;images&quot;) . dls.valid.show_batch(max_n=4, nrows=1) . learn = cnn_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(8) . epoch train_loss valid_loss error_rate time . 0 | 1.204669 | 0.573202 | 0.266667 | 00:03 | . epoch train_loss valid_loss error_rate time . 0 | 0.551897 | 0.288518 | 0.100000 | 00:03 | . 1 | 0.439661 | 0.272065 | 0.050000 | 00:03 | . 2 | 0.362033 | 0.295560 | 0.050000 | 00:03 | . 3 | 0.320297 | 0.365100 | 0.066667 | 00:03 | . 4 | 0.263752 | 0.328156 | 0.083333 | 00:03 | . 5 | 0.222927 | 0.283832 | 0.050000 | 00:03 | . 6 | 0.191719 | 0.262306 | 0.050000 | 00:03 | . 7 | 0.169909 | 0.257237 | 0.050000 | 00:03 | . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() . learn.export() . Image.open(&quot;hotdog.jpg&quot;).to_thumb(128,128) . pred,pred_idx,probs = learn.predict(&quot;hotdog.jpg&quot;) pred,pred_idx,probs . (&#39;hotdogs&#39;, tensor(1), tensor([8.7614e-06, 9.9999e-01])) . Image.open(&quot;burger.jpg&quot;).to_thumb(128,128) . pred,pred_idx,probs = learn.predict(&quot;burger.jpg&quot;) f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; . &#39;Prediction: food; Probability: 0.9992&#39; . import ipywidgets as widgets from PIL import * . btn_upload = widgets.FileUpload() btn_upload . btn_run = widgets.Button(description=&#39;Classify&#39;) btn_run . def on_click_classify(change): img = PILImage.create(btn_upload.data[-1]) out_pl.clear_output() with out_pl: display(img.to_thumb(128,128)) pred,pred_idx,probs = learn_inf.predict(img) lbl_pred.value = f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; btn_run.on_click(on_click_classify) . out_pl = widgets.Output() out_pl.clear_output() out_pl .",
            "url": "https://domovou.github.io/fastpages_blog/2020/02/18/Hotdog_finder.html",
            "relUrl": "/2020/02/18/Hotdog_finder.html",
            "date": " • Feb 18, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://domovou.github.io/fastpages_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://domovou.github.io/fastpages_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://domovou.github.io/fastpages_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}